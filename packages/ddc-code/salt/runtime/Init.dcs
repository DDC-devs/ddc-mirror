
-- Initialization functions for the runtime system.
--
--   This module is treated specially by the LLVM code generator. 
--
--   When compiling this module the global symbols used by the runtime
--   system are declared statically, and exported with external linkage.
--   For all other modules the symbols are imported.
--
--   This module must contain uses of those global symbols, otherwise
--   the system linker will forget about the symbols when building 
--   the runtime system .dylib library.
--
--   The global symbols are:
--
--   Linker Symbol              DDC primitive.
--   __DDC__heapBase            heapBase#
--   __DDC__heapMax             heapMax#
--   __DDC__heapTop             heapTop#
--   __DDC__heapBackBase        heapBackBase#
--   __DDC__heapBackMax         heapBackMax#
--   __DDC__heapBackTop         heapBackTop#
--
module Init
export value
 ddcInit        :  Nat# -> Unit
 ddcExit        :  Nat# -> Void#

import foreign c value
 malloc         : Nat#  -> Addr#
 free           : Addr# -> Void#
 exit           : Nat#  -> Void#
with letrec


-------------------------------------------------------------------------------
-- | Initialize the DDC runtime system.
ddcInit (heapSize :Nat#): Unit
 = do   ddcAllocInit   heapSize
        ()


-- | Initialise the allocation system and allocate the heap.
ddcAllocInit (heapSize : Nat#) : Unit
 = do
        -- Create the front heap.
        pHeapBaseA      = malloc heapSize
        write# heapBase#     0# pHeapBaseA
        write# heapTop#      0# pHeapBaseA
        write# heapMax#      0# (plusAddr# pHeapBaseA    (sub# heapSize 1#))

        -- Create the back heap.
        pHeapBackBaseA  = malloc heapSize
        write# heapBackBase# 0# pHeapBackBaseA
        write# heapBackTop#  0# pHeapBackBaseA
        write# heapBackMax#  0# (plusAddr# pHeapBackBaseA (sub# heapSize 1#))

        ()


-------------------------------------------------------------------------------
-- | Shutdown the runtime system and exit cleanly.
ddcExit (code: Nat#): Void#
 = do   
        -- Free the space for the heaps.
        pHeapBaseA      = read# heapBase#     0#
        pHeapBackBaseA  = read# heapBackBase# 0#

        free pHeapBaseA
        free pHeapBackBaseA

        -- Use the system exit function to exit cleanly.
        exit code

