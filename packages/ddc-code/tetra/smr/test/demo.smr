

@set    xx cont = cont xx;


@fac n
 = @if  (@iszero n)
        @one
        (@mul n (@fac (@pred n)));

@nat-fac n
 = #if  (#nat-eq #nat-0 n)
        #nat-1
        (#nat-mul n (@nat-fac (#nat-sub n #nat-1)));


@list-case xx alt-nil alt-cons
 = #match xx %nil          alt-nil
  (#match xx (%cons #o #o) alt-cons
   %fail);


@replicate n x
 = #if  (#nat-eq #nat-0 n)
        %nil
        (%cons x (@replicate (#nat-sub n #nat-1) x));


@range a b
 = #if  (#nat-gt a b)
        %nil
        (%cons a (@range (#nat-add a #nat-1) b));


@length xx
 = @list-case
        xx
        #nat-0
        (\x. \xs. #nat-add #nat-1 (@length xs));


@foldl f z xx
 = @list-case
        xx 
        z 
        (\x. \xs. @foldl f (f z x) xs);

@sum xx
 = @foldl #nat-add #nat-0 xx;
        
