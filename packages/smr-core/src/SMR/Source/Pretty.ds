
module SMR.Source.Pretty
export 
{       pretty_Exp
}
import SMR.Core.Exp
import Class.Pretty
import Data.Text
where


-- | Pretty printer for an expression.
pretty_Exp {Pretty s} {Pretty p}: Pretty (Exp s p)
 = Pretty $ \xx -> pprExp' ContextBody xx


-- | Context of a pretty printed expression.
data Context where
        ContextFun    : Context
        ContextArg    : Context
        ContextBody   : Context



-- | Pretty print an expression in the given context.
pprExp' [s p: Data] {Pretty s} {Pretty p} (ctx: Context) (xx: Exp s p): Text
 | ContextBody  <- ctx
 = case xx of
        XVar name 0     -> name 
        XVar name d     -> name % "^" % show d

        -- TODO: adding the "\\" string here causes a compile error.
        XAbs name x     -> (textOfChar '\\') % name % "." % pprExp' ContextBody x
        XApp x1 x2      -> pprExp' ContextFun x1 %% pprExp' ContextArg x2

        XRef r          -> pprRef r

 | ContextFun   <- ctx
 = case xx of
        XAbs _ _        -> parens $ pprExp' ContextBody xx
        _               -> pprExp' ContextBody xx

 | ContextArg   <- ctx
 = case xx of
        XAbs _ _        -> parens $ pprExp' ContextBody xx
        XApp _ _        -> parens $ pprExp' ContextBody xx
        _               -> pprExp' ContextBody xx


pprRef [s p: Data] {Pretty s} {Pretty p} (rr: Ref s p): Text
 = case rr of
        RMac   n        -> "@" % n
        RSet   n        -> "+" % n
        RSym   s        -> "%" % ppr s
        RPrm   p        -> "#" % ppr p
