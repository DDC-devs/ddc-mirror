
-- Test out handling of a third order function.
--	At third order we can start to get more-than constraints on effects.

-- old faithful
succ :: Int -> Int
succ x 		= x + 1

-- foo is a third order function.
foo f 		= succ (f succ)
appFive g	= g 5

-- bar is a fourth order function with who's type has no more-than constraints.
bar f 		= f appFive

main ()
 = do	println $ show (foo appFive)
	println $ show (bar foo)





