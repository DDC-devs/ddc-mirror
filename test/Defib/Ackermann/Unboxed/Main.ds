
import Data.Int32U;

ack m n
 = case primInt32U_eq m 0# of {
 	1#	-> n + 1#;
	0#	-> case primInt32U_eq n 0# of {
			1#	-> ack (m - 1#) 1#;
			0#	-> ack (m - 1#) (ack m (n - 1#));
		};
 };
 

main ()
 = do {
	n	= 9#;
	print $ "Ack(3," 
		% show (boxInt32 n) % "): " 
		% show (boxInt32 (ack 3# n)) % "\n";
 };



{-
ack m n
 = match {
 	| 1#	<- m #== 0#
	= n #+ 1;
	
	| 1#	<- n #== 0#
	= ack (m #- 1#) 1#;
	
	| otherwise
	= ack (m #- 1#) (ack m (n #- 1#));
 };
 
-}
