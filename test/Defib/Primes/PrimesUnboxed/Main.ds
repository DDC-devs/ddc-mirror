
import Data.Int32U;

main ()
 = do {	
 	max	= 1500;

	primes	= arrayUI_new 1 (max + 1);
	arrayUI_set primes 0 2;
	 
	fillPrimes primes (unboxInt32 max) 1# 2#;

	result	= arrayUI_get primes max;
	print	$ (show result) % "\n";
 };


fillPrimes primes max high i
 = match {
	| 1# <- primInt32U_gt high max		= ();

	| 1# <- checkPrime primes high i 0#
	= do {	arrayUI_poke primes high i;
		fillPrimes primes max (high + 1#) (i + 1#);
	};
	
	\= 	fillPrimes primes max high (i + 1#);
 };


checkPrime array high x n
 = match {
 	| 1# <- primInt32U_ge n high
	= 1#;

	| 1# <- (primInt32U_eq (mod x (arrayUI_peek array n))) 0#
	= 0#;
	
	\= checkPrime array high x (n + 1#);
 };


