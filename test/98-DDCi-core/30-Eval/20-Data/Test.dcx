

-- Construct an empty list.
Nil {R0#} {Int R0#} ()


-- Construct a single element list.
Cons {R0#} {Int R0#}\
        (5 {R0#} ())\
        (Nil {R0#} {Int R0#} ())


-- Contruct and destruct a single element list.
let i   : Int R0#              = 5 {R0#} () in\
let nil : List R0# (Int R0#)   = Nil  {R0#} {Int R0#} () in\
let xx  : List R0# (Int R0#)   = Cons {R0#} {Int R0#} i nil in\
case xx of {\
  Nil                             -> 0;\
  Cons (x  : Int R0#)\
       (xs : List R0# (Int R0#))  -> x\
}


-- Match on an integer literal.
case 5 {R0#} () of {\
  5 -> 1 {R0#} ();\
  _ -> 0;\
}


