
-- Error: region is free in the return type of the returned function.
:check\
letregion r1 with {w1 : Const r1} in\
 \(x:Unit). purify <alloc {r1}> (5 {r1} ())


-- Error: region is visible in the effect of the returned function.
:check\
letregion r1 with {w1 : Const r1} in\
 \(x:Unit). addInt {:r1 R0# R0#:} (2 {r1} ()) (3 {R0#} ())


-- Error: region is visible in the effect of the returned function.
-- We've purified the read effect, but the alloc effect is still visible.
:check\
letregion r1 with {w1 : Const r1} in\
 \(x:Unit). purify <read {r1} w1>\
            (addInt {:r1 R0# R0#:} (2 {r1} ()) (3 {R0#} ()))


-- Error: region is visible in the closure of the returned function.
-- We've purified the read and alloc effects, but we can still see
-- that the function uses the region due to the Use term in the
-- function's closure.
:check\
letregion r1 with {w1 : Const r1} in\
 \(x:Unit). purify <read {r1} w1 & alloc {r1} w1>\
            (addInt {:r1 R0# R0#:} (2 {r1} ()) (3 {R0#} ()))
