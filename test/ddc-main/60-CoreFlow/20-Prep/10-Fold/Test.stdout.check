
ok

-- Two folds over the same input series.
module Test with
letrec {
  test : [k : Rate].Ref# Int# -> Ref# Int# -> Series# k Int# -> Process#
    = /\(k : Rate).
       \(u1 u2 : Ref# Int#).\(elems : Series# k Int#).
      let x3 : Process#
            = sreduce# [k] [Int#] u1
                  (\(x0 x1 : Int#). add# [Int#] x0 x1) 0i# elems in
      let x8 : Process#
            = sreduce# [k] [Int#] u2
                  (\(x5 x6 : Int#). mul# [Int#] x5 x6) 1i# elems in
      let x10 : Process# = pjoin# x3 x8 in
      x10
}

