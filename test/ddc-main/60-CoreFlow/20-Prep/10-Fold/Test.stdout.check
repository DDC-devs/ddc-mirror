
ok

-- Two folds over the same input series.
module Test with
letrec {
  test : [t0 : Rate].Ref# Int# -> Ref# Int# -> Series# t0 Int# -> Process#
    = /\(t0 : Rate).
       \(x1 x2 : Ref# Int#).\(x3 : Series# t0 Int#).
      let x7 : Process#
            = sreduce# [t0] [Int#] x1
                  (\(x4 x5 : Int#). add# [Int#] x4 x5) 0i# x3 in
      let x12 : Process#
            = sreduce# [t0] [Int#] x2
                  (\(x9 x10 : Int#). mul# [Int#] x9 x10) 1i# x3 in
      let x14 : Process# = pjoin# x7 x12 in
      x14
}

