ok
ok

-- Simple fold over a vector
module Test 
import foreign c value
        getFieldOfBoxed : [^ : Region].[^ : Data].Ptr# ^1 Obj -> Nat# -> ^0;
import foreign c value
        setFieldOfBoxed : [^ : Region].[^ : Data].Ptr# ^1 Obj -> Nat# -> ^0 -> Void#;
import foreign c value
        allocBoxed : [^ : Region].Tag# -> Nat# -> Ptr# ^0 Obj;
with
letrec {
  x3$runproc$process$L0 : Ptr# rT Int# -> Nat# -> Nat# -> Int# -> Int#
    = \(x3 : Ptr# rT Int#).\(loop$length x1 : Nat#).\(x0$acc$1 : Int#).
      case sub# [Nat#] loop$length x1 of {
        0#  
         -> x0$acc$1;
        _ 
         -> let x3$elem : Int#
                  = peek# [rT] [Int#] x3
                        (mul# [Nat#] x1 (size# [Int#])) in
            let x4 : Int# = add# [Int#] x0$acc$1 x3$elem in
            x3$runproc$process$L0 x3 loop$length (add# [Nat#] x1 1#) x4
      };
  
  x3$runproc$process : Ptr# rT Int# -> Nat# -> Ptr# rT Int# -> Unit
    = \(x0 : Ptr# rT Int#).\(x2 : Nat#).\(x3 : Ptr# rT Int#).
      let x0$init : Int# = peek# [rT] [Int#] x0 0# in
      let loop$length : Nat# = x2 in
      let x0$acc$2 : Int# = x3$runproc$process$L0 x3 loop$length 0# x0$init in
      let _ : Unit
            = let _ : Void# = poke# [rT] [Int#] x0 0# x0$acc$2 in
              () in
      ();
  
  test$L0 : Ptr# rT Int# -> Nat# -> Ptr# rT Int# -> Unit
    = \(x10 : Ptr# rT Int#).\(x12 : Nat#).\(x13 : Ptr# rT Int#). x3$runproc$process x10 x12 x13;
  
  test : Ptr# rT Obj -> Int#
    = \(x9 : Ptr# rT Obj).
      let x10 : Ptr# rT Int#
            = let ^ : Ptr# rT Int#
                    = makePtr# [rT] [Int#]
                          (alloc# (size# [Int#])) in
              let _ : Void# = poke# [rT] [Int#] ^0 0# 0i# in
              ^0 in
      let x15 : Bool#
            = let _ : Unit
                    = test$L0 x10
                          (peek# [rT] [Nat#]
                               (castPtr# [rT] [Nat#] [Obj]
                                    (getFieldOfBoxed [rT] [Ptr# rT Obj] x9 0#)) 0#)
                          (castPtr# [rT] [Int#] [Obj]
                               (getFieldOfBoxed [rT] [Ptr# rT Obj] x9 1#)) in
              True# in
      peek# [rT] [Int#] x10 0#
}

