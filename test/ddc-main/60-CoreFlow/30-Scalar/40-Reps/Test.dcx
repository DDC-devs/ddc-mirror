:set lang Flow
:set Synth
:set SuppressLetTypes

-- Fill a vector with segmentedly replicated elements.
:flow-lower..
module Test with letrec
repsme  [k1 : Rate]
        (lens : Series# k1 Nat#)  (s1   : Series# k1 Float32#)
        (v    : Vector# Float32#)
        : Process#
 = smkSegd# lens
    (/\(k2 : Rate). \(segd : Segd# k1 k2). 
     do s2 = sreps# segd s1
        s3 = smap#  (mul# 2.0f32#) s2 
        sfill# v s3)
;;


-- Multiply two series created by reps.
-- In the lowered code the multiply ends up in the segment context.
:flow-lower..
module Test with letrec
repsme  [k1 : Rate]
        (lens : Series# k1 Nat#) (s1 s2 : Series# k1 Float32#)
        (v    : Vector# Float32#)
        : Process#
 = smkSegd# lens
    (/\(k2 : Rate). \(segd : Segd# k1 k2).
     do s1r = sreps# segd s1
        s2r = sreps# segd s2
        s3  = smap2# mul# s1r s2r
        sfill# v s3)
;;

