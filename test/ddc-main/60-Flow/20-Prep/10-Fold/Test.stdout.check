
ok

-- Two folds over the same input series.
module Test with
letrec {
  ffold : [k : Rate].Series# k Int# -> Int#
    = /\(k : Rate).
       \(s : Series# k Int#).
      let x3 : Int#
            = sfold# [k] [Int#] [Int#]
                  (\(x0 x1 : Int#). add# [Int#] x0 x1) 0i# s in
      let x8 : Int#
            = sfold# [k] [Int#] [Int#]
                  (\(x5 x6 : Int#). mul# [Int#] x5 x6) 1i# s in
      add# [Int#] x3 x8
}


-- Function with an imported variable binding that needs to be eta-expanded.
