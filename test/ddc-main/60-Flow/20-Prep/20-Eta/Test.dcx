
-- Check eta expansion is working.
:set lang Flow
:set trans Eta
:load..
module Test 
imports f :: Int# -> Int# -> Int#
with letrec
ffold [k : Rate] (s : Series# k Int#) : Int#
 = fold# [k] [Int#] [Int#] f 0i# s
;;


-- Fold and fold with index.
:load..
module Test 
imports { 
        minIx  :: Int# -> Tuple2# Int# Int# -> Int# -> Tuple2# Int# Int#;
        addInt :: Int# -> Int# -> Int#
}
with letrec
foldix [k : Rate] (s : Series# k Int#) 
        : Tuple2# (Tuple2# Int# Int#) Int#
 = do   
        mix     = foldIndex# [k] [Tuple2# Int# Int#] [Int#] 
                        minIx 
                        (T2# [Int#] [Int#] 0i# 0i#) s 

        sum     = fold# [k] [Int#] [Int#] addInt 0i# s
   
        T2# [Tuple2# Int# Int#] [Int#] mix sum
;;
