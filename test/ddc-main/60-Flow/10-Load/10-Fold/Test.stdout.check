ok

-- Single series being eaten by two consumers.
module Test with
letrec {
  test : [k : Rate].Series# k Int# -> Int#
    = /\(k : Rate).
       \(elems : Series# k Int#).
      let sum : Int#
            = sfold# [k] [Int#] [Int#]
                  (\(x1 y1 : Int#). add# [Int#] x1 y1) 0i# elems in
      let prod : Int#
            = sfold# [k] [Int#] [Int#]
                  (\(x2 y2 : Int#). mul# [Int#] x2 y2) 1i# elems in
      add# [Int#] sum prod
}
