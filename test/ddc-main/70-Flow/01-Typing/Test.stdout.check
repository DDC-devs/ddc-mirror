ok

-- Check primitives have real types.
add# :: [^ : Data].^0 -> ^0 -> ^0
sub# :: [^ : Data].^0 -> ^0 -> ^0


-- Flow DSL types.
Len :: Nat' ~> Rate
Stream :: Rate ~> Data ~> Data
Vector :: Rate ~> Data ~> Data
Segd :: Rate ~> Rate ~> Data
Sel2 :: Rate ~> Rate ~> Rate ~> Data

-- Flow DSL operators.
map1# :: [^ : Rate].[^ ^ : Data].(^1 -> ^0) -> Stream ^2 ^1 -> Stream ^2 ^0
rep# :: [^ : Nat'].[^ : Data].^1 -> ^0 -> Stream (Len ^1) ^0
reps# :: [^ ^ : Rate].[^ : Data].Segd ^2 ^1 -> Stream ^2 ^0 -> Stream ^1 ^0
fold# :: [^ : Rate].[^ ^ : Data].(^1 -> ^0 -> ^1) -> ^1 -> Stream ^2 ^1 -> ^1
folds# :: [^ ^ : Rate].[^ ^ : Data].Segd ^3 ^2 -> (^1 -> ^0 -> ^1) -> Stream ^3 ^1 -> Stream ^2 ^0 -> Stream ^3 ^1
pack# :: [^ ^ : Rate].[^ : Data].Sel1 ^2 ^1 -> Stream ^2 ^0 -> Stream ^1 ^0

