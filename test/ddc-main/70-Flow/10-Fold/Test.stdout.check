ok


-- Single stream being eaten by multiple consumers.
module Test with
letrec {
  test : [a : Data].[k : Rate].Stream k Int# -> Int#
    = /\(a : Data)./\(k : Rate).
       \(elems : Stream k Int#).
      let sum : Int#
            = fold# [Int#] [Int#] [k] (add# [Int#]) 0i# elems in
      let prod : Int#
            = fold# [Int#] [Int#] [k] (mul# [Int#]) 1i# elems in
      add# [Int#] sum prod
}

