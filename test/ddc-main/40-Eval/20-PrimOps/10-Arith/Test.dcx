-- Two and three make five (hopefully).
-- The evaluator must decend into all arguments of the application.
addInt [:r1# r2# r3#:] (2 [r1#] ()) (3 [r2#] ())


-- Nested addition
addInt [:r1# r2# r3#:] (addInt [:r3# r4# r1#:] (20 [r3#] ()) (30 [r4#] ())) (40 [r2#] ())


-- Forget around integer to add.
:eval..
letregion r with {w : Global r} in
addInt [:r r2# r3#:] 
        (forget use [r] w in (2 [r] ()))
        (3 [r2#] ());;
