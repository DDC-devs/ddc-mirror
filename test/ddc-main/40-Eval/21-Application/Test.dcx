-- Identity function.
(\(x:Unit). x) ()


-- Substitute into inner lambda.
(\(i:Int r1#). \(x:Unit). i) (5 [r1#] ()) ()


-- Under-applied primitive constructor.
5


-- Under-applied primitive constructor.
5 [r0#]


-- Over-applied abstraction.
:eval..
letrec { thing [a:Data] (x:a) : a = x }
in  thing [[^^^:Region].Int ^2 -> Int ^1 -(Read ^1 + Read ^2 + Alloc ^0 | Use ^2)> Int ^0] 
          addInt
          [:r0# r0# r0#:]
          (10 [r0#] ())
          (20 [r0#] ());;


