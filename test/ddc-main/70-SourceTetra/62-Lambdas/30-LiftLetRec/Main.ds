
-- | Check that we can lambda lift local letrecs.
module Main
import Data.Maybe
import Data.Text
import System.IO.Console
where


data Ordering where
        LT      : Ordering
        GT      : Ordering
        EQ      : Ordering


data Ord (k: Data) where
        Ord     : (k -> k -> Ordering) -> Ord k

type Size = Nat

data TestMap (k a: Data) where
        Bin2 : Size -> k -> a -> TestMap k a -> TestMap k a -> TestMap k a
        Tip2 : TestMap k a


map_lookup ((Ord compare): Ord k) (kx: k) (mp: TestMap k a): Maybe a
 = go kx mp
 where  
        go _ Tip2 
         = Nothing [a]

        go k (Bin2 _ kx x l r)
         = case compare k kx of
                LT -> go k l
                GT -> go k r
                EQ -> Just x


main ()
 = writel "dummy"