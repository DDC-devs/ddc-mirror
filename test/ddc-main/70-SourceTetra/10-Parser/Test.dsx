

-- A module with no top-level things.
:parse..
module Test where;;


-- Parse module with some top-level things.
-- Top level things are signaled by 'where'.
:parse..
module Test where
x : Nat = 5
y : Nat = add# x x
;;


-- Factorial with primops.
:parse..
module Test where
fac (x : Nat) : Nat
 = case x of
        0       -> 1
        _       -> mul# x (fac (sub# x 1))
;;


-- Factorial with infix operators.
:parse..
module Test where
fac (x : Nat) : Nat
 = case x of
        0       -> 1
        _       -> x * (fac (x - 1))
;;


-- All the literals
:parse..
module Test where
foo (_ : Unit) : Unit
 = do   
        b1      = True#
        b2      = False#

        n1      = 1
        n2      = 2
        n100    = 100

        i1      = 1i
        i2      = 2i
        i100    = 100i
        in1     = -1i
        in2     = -2i
        in100   = -100i

        f1      = 1.0f32
        f2      = 2.0f32
        f100    = 100.0f32
        f010    = 0.1f32

        s1234   = 1234s

        w32     = 0x1234w32

        ()
;;
