

-- With explicit kind for parameters.
:parse..
module Test where
data List (a : Data) where
        Nil    : List a
        Cons   : a -> List a -> List a
;;


-- Maybe type.
:parse..
module Test where
data Maybe (a : Data) where
        Nothing : Maybe a
        Just    : a -> Maybe a
;;


-- Closure.
:parse..
module Test where
data Clo (a b : Data) where
        Clo     : (a -> b) -> Clo a b
;;


-- Data declaration with no constructors.
:parse..
module Test where
data Void
;;


-- Error: data constructor reused in a different data type.
:to-core..
module Test where

data Blerk where
        Foo     : Blerk
        Bar     : Blerk

data Blerk2 where
        Foo     : Blerk2
        Bar     : Blerk2

foo (x : Blerk) : Blerk
 = case x of
        Foo     -> Bar
        Bar     -> Foo
;;
