
-- Convert a Core Salt module into raw C code.
ok
ok
Obj* addInt (Obj* x, Obj* y)
{
        int_t _sym_xZPm  = unboxInt (x);
        int_t _sym_yZPm  = unboxInt (y);
        int_t r          = (_sym_xZPm + _sym_yZPm);
        Obj* z           = boxInt (r);
        return z;
}

Obj* boxInt (int_t x)
{
        Obj* obj         = allocRaw (0, 4);
        addr_t addr      = _takePtr (Obj, obj);
        _write (int_t, addr, 8, x);
        return obj;
}

int_t unboxInt (Obj* obj)
{
        addr_t addr      = _takePtr (Obj, obj);
        int_t x          = _read (int_t, addr, 8);
        return x;
}

int_t main (nat_t argc, addr_t argv)
{
        Obj* x           = boxInt (5);
        Obj* x2          = addInt (x, x);
        int_t x0         = unboxInt (x2);
        string_t str     = _showInt (x0);
        _putStrLn (str);
        return 0;
}


-- Discarding witness declaration and application when converting to C
ok
ok
Obj* addDistinct (Obj* x, Obj* y)
{
        int_t _sym_xZPm  = unboxInt (x);
        int_t _sym_yZPm  = unboxInt (y);
        int_t r          = (_sym_xZPm + _sym_yZPm);
        Obj* z           = boxInt (r);
        return z;
}

Obj* boxInt (int_t x)
{
        Obj* obj         = allocRaw (0, 4);
        addr_t addr      = _takePtr (Obj, obj);
        _write (int_t, addr, 8, x);
        return obj;
}

int_t unboxInt (Obj* obj)
{
        addr_t addr      = _takePtr (Obj, obj);
        int_t x          = _read (int_t, addr, 8);
        return x;
}

int_t main (nat_t argc, addr_t argv)
{
        Obj* x1          = boxInt (5);
        Obj* x2          = boxInt (7);
        Obj* ret         = addDistinct (x1, x2);
        int_t x0         = unboxInt (ret);
        string_t str     = _showInt (x0);
        _putStrLn (str);
        return 0;
}


