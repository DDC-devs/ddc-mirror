ok

* STEP: letregion r3 in addInt [r1#] [r3] [r2#] (5 [r1#] ()) (6 [r3] ())
* STORE
  NextLoc: 1
  NextRgn: 3
  Regions: {r0#, r1#, r2#}
  Global:  {r0#, r1#, r2#}

  Binds:
   l0#:r0# -> OBJ ()
      :: Unit

* STEP: withregion r3# in addInt [r1#] [r3#] [r2#] (5 [r1#] ()) (6 [r3#] ())
* STORE
  NextLoc: 1
  NextRgn: 4
  Regions: {r0#, r1#, r2#, r3#}
  Global:  {r0#, r1#, r2#}

  Binds:
   l0#:r0# -> OBJ ()
      :: Unit

* STEP: withregion r3# in addInt [r1#] [r3#] [r2#] l1# (6 [r3#] ())
* STORE
  NextLoc: 2
  NextRgn: 4
  Regions: {r0#, r1#, r2#, r3#}
  Global:  {r0#, r1#, r2#}

  Binds:
   l0#:r0# -> OBJ ()
      :: Unit
   l1#:r1# -> OBJ 5
      :: Int r1#

* STEP: withregion r3# in addInt [r1#] [r3#] [r2#] l1# l2#
* STORE
  NextLoc: 3
  NextRgn: 4
  Regions: {r0#, r1#, r2#, r3#}
  Global:  {r0#, r1#, r2#}

  Binds:
   l0#:r0# -> OBJ ()
      :: Unit
   l1#:r1# -> OBJ 5
      :: Int r1#
   l2#:r3# -> OBJ 6
      :: Int r3#

* STEP: withregion r3# in l3#
* STORE
  NextLoc: 4
  NextRgn: 4
  Regions: {r0#, r1#, r2#, r3#}
  Global:  {r0#, r1#, r2#}

  Binds:
   l0#:r0# -> OBJ ()
      :: Unit
   l1#:r1# -> OBJ 5
      :: Int r1#
   l2#:r3# -> OBJ 6
      :: Int r3#
   l3#:r2# -> OBJ 11
      :: Int r2#

* STEP: l3#
* STORE
  NextLoc: 4
  NextRgn: 4
  Regions: {r0#, r1#, r2#}
  Global:  {r0#, r1#, r2#}

  Binds:
   l0#:r0# -> OBJ ()
      :: Unit
   l1#:r1# -> OBJ 5
      :: Int r1#
   l3#:r2# -> OBJ 11
      :: Int r2#

11
