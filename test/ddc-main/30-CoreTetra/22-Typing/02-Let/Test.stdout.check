ok

-- Ok: let expression with explicit type annotation.
When checking expression.
  <batch>:4:2
  Type mismatch in let-binding.
                  The binder: x
                    has type: Int#
       but the body has type: Nat#
  
  with: let x: Int# = 5# in
        x


-- Ok: let expression with no type annotation.
let x: Nat# = 5# in
x
:*: Nat#
:!: Pure


-- Error: let binder has incorrect type annotation.
When checking expression.
  <batch>:12:2
  Type mismatch in let-binding.
                  The binder: x
                    has type: Int#
       but the body has type: Unit
  
  with: let x: Int# = () in
        x


-- Error: binding must have data kind.
When checking expression.
  Universe malfunction.
                 Type: Effect
   is not in universe: Spec


-- Error: binding must have data kind.
When checking expression.
  Universe malfunction.
                 Type: Effect
   is not in universe: Spec


-- Error: body must have data kind.
When checking expression.
  Universe malfunction.
                 Type: Effect
   is not in universe: Spec


-- Error: body must have data kind.
When checking expression.
  Universe malfunction.
                 Type: Effect
   is not in universe: Spec

