:set lang Tetra

-- Check we can produce existential vars.
:synth \x. x


-- Check existing type annots are not trashed during synth.
:synth \(x : Unit). x


-- Check order of existential vars.
:synth \x. \y. \z. y


-- Function application.
:synth \f. \x. f x


-- Multiple use of argument.
:synth \f. \x. f x x


-- Second order.
:synth \f. \g. \x. f (g x)


-- Third order.
:synth \f. \g. \x. f g (g x)


-- Application.
:synth (\f. \g. \x. f g (g x)) (\x. x)


-- Type abstraction.
:synth /\(a : Data). \x. x


-- Abstract type being used as annotation.
:synth /\(a : Data). \(x : a). \y. x


-- Abstract type being used as type argument.
-- Synthesizes annotation on lambda.
:synth /\(r : Region). /\(a : Data). \x. readRef# [r] [a] x

