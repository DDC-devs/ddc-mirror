-- Imports

-- Pragmas

-- Infix

-- Data
data Foo a
        = FooInt {
                Base.Int;
        }
        
        | FooFloat {
                Base.Float;
        }
        
        | FooFun {
                a -> a;
        };

data Fruit
        = Apple
        
        | Orange;


-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern fi
        :: forall t0
        .  Foo %rTS0 t0 %rTS1 %rTS2
        :$ Base.Data;
        
foreign import extern ff
        :: forall t0
        .  Foo %rTS3 t0 %rTS4 %rTS5
        :$ Base.Data;
        
foreign import extern ffun
        :: Foo %rTS6 (Base.Int %rTS12) %rTS7 %rTS8
        :- Base.Const %rTS12
        :$ Base.Data;
        
foreign import extern succ
        :: forall %r0 %r1
        .  Base.Int %r0 -(!e0)> Base.Int %r1
        :- !e0        = Base.!Read %r0
        :$ Base.Data -> Base.Data;
        
foreign import extern main
        :: Base.Unit -> Base.Unit
        :$ Base.Data -> Base.Data;
        

