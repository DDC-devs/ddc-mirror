-- Imports

-- Pragmas

-- Infix

-- Data
data Fruit %rDK0
        = Apple
        
        | Orange;

data Foo %rDK1 a
        = FooInt {
                Base.Int %rDK1;
        }
        
        | FooFloat {
                Base.Float %rDK1;
        }
        
        | FooFun {
                a -> a;
        };

data Bar %rDK2 a
        = BarFoo {
                Main.Foo %rDK2 a;
        };


-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern fi
        :: forall t0
        .  Foo %rTS0 t0
        :$ Base.Data;
        
foreign import extern ff
        :: forall t0
        .  Foo %rTS1 t0
        :$ Base.Data;
        
foreign import extern ffun
        :: Foo %rTS2 (Base.Int %rTS6)
        :- Base.Const %rTS6
        :$ Base.Data;
        
foreign import extern succ
        :: forall %r0 %r1
        .  Base.Int %r0 -(!e0)> Base.Int %r1
        :- !e0        = Base.!Read %r0
        :$ Base.Data -> Base.Data;
        
foreign import extern main
        :: Base.Unit -> Base.Unit
        :$ Base.Data -> Base.Data;
        

