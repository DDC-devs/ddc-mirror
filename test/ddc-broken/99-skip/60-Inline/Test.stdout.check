
-- Check that the inliner does it's thing.
ok
ok
ok
module List 
import value subNat : [r1 r2 r3 : Region].Nat r1 -(Pure | Use r3)> Nat r2 -(Read r1 + Read r2 + Alloc r3 | Use r1 + Use r3)> Nat r3;
with
letrec {
  replicate : [r1 r2 : Region].[a : Data].Nat r1 -(Pure | Use r1 + Use r2)> a -(Read r1 + Read r2 + Alloc r2 | Use r1 + Use r2)> List r2 a
    = /\(r1 r2 : Region)./\(a : Data).
       \(n : Nat r1).\(x : a).
      weakclo {[r1]; n} in
      private r3 in
      weakclo {[r3]} in
      case n of {
        N# (n2 : Nat#) 
         -> case eq# [Nat#] n2 0# of {
              True#  
               -> Nil [r2] [a] ();
              False#  
               -> Cons [r2] [a] x
                      (replicate [r3] [r2] [a]
                           ((\(^ : Nat r3).
                             case n of {
                               N# (^ : Nat#) 
                                -> case ^1 of {
                                     N# (^ : Nat#) 
                                      -> N# [r3] (sub# [Nat#] ^1 ^0)
                                   }
                             }) (N# [r3] 1#)) x)
            }
      }
}
