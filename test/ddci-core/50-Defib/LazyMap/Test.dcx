
:check..
letrec {
 mapL   [r1 r2: %] [e1:!] [c1:$] [a b : *]
        <w1 : Const r1>  <w2 : Lazy   r2>
        <w2 : Global r1> <w3 : Global r2>
        (f  : a -> b)
        (xx : List r1 a)
        : List r2 b
  = purify <read [r1] w1 & alloc [r1] w1> in
    case xx of {
        Nil             
         -> Nil [:r2 b:] ();

        Cons x xs       
         -> let xs' lazy <w2>   
                  = mapL [:r1 r2 e1 c1 a b:] <:w1 w2 w3:> f xs 
            in  Cons [r2] [b] (f x) xs'
  }
} in ();;
