
:set trans Anonymize

-- Anonymize lambdas and applications.
-- Broken: the Use closure term on the first function arrow is lost
-- :trans..
-- /\(r:%).\(x : Int r) (y : Int r). addInt [:r r r:] x y;;


-- Single let
:trans..
let x = () in x;;


-- Multiple lets
:trans..
let x = () in let y = 5 [R1#] () in x;;


-- letregion
:trans..
letregion r with {w : Const r} in
addInt [:r r R0#:] (2 [r] ()) (2 [r] ());;


-- letregion and lets
:trans..
letregion r with {w : Const r} in
let x = 2 [r] () in
let y = 3 [r] () in
addInt [:r r R0#:] x y;;
