
-- Convert a module in the SeaOutput fragment into raw C code.
:set +Indent
:seaout..
module Main
exports {
        twice  :: Int32# -> Int32#;
}
imports {
        Thing.foo with foo :: Int32#;
}
letrec {
        twice (x : Int32#) : Int32#
         = return# [Int32#] (add# [Int32#] x x);

        twice2 (x : Int32#) : Int32#
         = let z  : Int32#      = add# [Int32#] x x in
           return# [Int32#] z;

        triple  (x : Int32#) : Int32#
         = let z1 : Int32#      = add# [Int32#] x  x in
           let z2 : Int32#      = add# [Int32#] z1 x in
           return# [Int32#] z2;

        main (argc : Nat#) (argv : Ptr# String#) : Nat#
         = let x   : Int32#     = twice (i32# 5) in
           let str : String#    = showInt32# x in
           let _   : Void#      = putStr# str in
           return# [Nat#] 0;
};;
