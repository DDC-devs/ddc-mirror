
import Prelude;
import Tuple;

-----------------------
--
static1		= 5;
static2		= 6;
static3		= 7;

funs1 :: () -> Int;
funs1 ()	= static1;

funs2 :: () -> Int;
funs2 ()	= static2;

funs3 ()	= static3;


choice	b f g 
 = case b of {
 	True	-> f;
	False	-> g;
 };	


-- merge1
--	Summing environments via case alternatives.

merge1
 = case True of {
 	True	-> funs1;
	False	-> funs2;
 };

-- merge2
--	Summing environments via instance of choice.
--
merge2
 = choice True funs1 funs2;

ftuple () ()
	= (funs1, funs2, funs3);
