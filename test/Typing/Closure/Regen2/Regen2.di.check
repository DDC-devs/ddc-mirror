-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern fun1_u
        :: forall $c0 $c1 $c2
        .  Base.Unit -($c0)> Base.Unit -($c1)> Base.Unit -($c2)> Base.Int %rTS0
        :- $c0   = ${i1 :: Base.Int %rTS0}
        ,  $c1   = ${i1 :: Base.Int %rTS0}
        ,  $c2   = ${i1 :: Base.Int %rTS0}
        :$ Base.Thunk;
        
foreign import extern fun1_uu
        :: forall $c0 $c1
        .  Base.Unit -($c0)> Base.Unit -($c1)> Base.Int %rTS0
        :- $c0   = ${i1 :: Base.Int %rTS0}
        ,  $c1   = ${i1 :: Base.Int %rTS0}
        :$ Base.Thunk;
        
foreign import extern fun1_uuu
        :: forall $c0
        .  Base.Unit -($c0)> Base.Int %rTS0
        :- $c0   = ${i1 :: Base.Int %rTS0}
        :$ Base.Thunk;
        
foreign import extern fun1_uuuu
        :: Base.Int %rTS0
        :$ Base.Data;
        
foreign import extern fun1
        :: forall %r0 $c0 $c1 $c2
        .  Base.Unit -> Base.Unit -($c0)> Base.Unit -($c1)> Base.Unit -($c2)> Base.Int %r0
        :- $c0   = ${i1 :: Base.Int %r0}
        ,  $c1   = ${i1 :: Base.Int %r0}
        ,  $c2   = ${i1 :: Base.Int %r0}
        :$ Base.Data -> Base.Thunk;
        

