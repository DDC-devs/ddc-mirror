-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import fun1_u
        :: forall %r0
        .  Data.Tuple.Tuple2 %rTS5 (Base.Unit -(!e0 $c0)> Base.Int %r0) (Base.Unit -(!e1 $c1)> Base.Unit)
        :- !e0        = Base.!Read %rTS4
        ,  !e1        = !{Base.!Read %rTS4; Base.!Write %rTS4}
        ,  $c0        = x : %rTS4
        ,  $c1        = x : %rTS4
        ,  Base.Mutable %rTS4
        :$ Base.Data;
        
foreign import fun1_get1
        :: forall %r0
        .  Base.Unit -(!e0 $c0)> Base.Int %r0
        :- !e0        = Base.!Read %rTS4
        ,  $c0        = x : %rTS4
        ,  Base.Mutable %rTS4
        :$ Base.Thunk;
        
foreign import fun1_inc
        :: Base.Unit -(!e0 $c0)> Base.Unit
        :- !e0        = !{Base.!Read %rTS4; Base.!Write %rTS4}
        ,  $c0        = x : %rTS4
        ,  Base.Mutable %rTS4
        :$ Base.Thunk;
        
foreign import fun1
        :: forall %r0 %r1 %r2
        .  Base.Unit -> Data.Tuple.Tuple2 %r1 (Base.Unit -(!e0 $c0)> Base.Int %r2) (Base.Unit -(!e1 $c1)> Base.Unit)
        :- !e0        = Base.!Read %r0
        ,  !e1        = !{Base.!Read %r0; Base.!Write %r0}
        ,  $c0        = x : %r0
        ,  $c1        = x : %r0
        ,  Base.Mutable %r0
        :$ Base.Data -> Base.Data;
        
foreign import main
        :: Base.Unit -(!e0 $c0)> Base.Unit
        :- !e0        = !{Base.!Read %rTS4; Base.!Write %rTS4; System.Console.!Console}
        ,  $c0        = ${fun1_inc : %rTS4; fun1_get1 : %rTS4}
        ,  Base.Mutable %rTS4
        :$ Base.Data -> Base.Data;
        

