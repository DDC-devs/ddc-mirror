-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern x
        :: Base.Int %rTC19
        :$ Base.Data;
        
foreign import extern fun
        :: forall %r0 !e0 $c0
        .  Base.Unit -(!e0 $c0)> Base.Int %r0
        :- !e0   = !{Base.!Read %rTC19}
        ,  $c0   = ${x :: Base.Int %rTC19}
        :$ Base.Data -> Base.Data;
        
foreign import extern fun2
        :: forall %r0 !e0 $c0 $c1
        .  Base.Unit -($c0)> Base.Unit -(!e0 $c1)> Base.Int %r0
        :- !e0   = !{Base.!Read %rTC19}
        ,  $c0   = ${x :: Base.Int %rTC19}
        ,  $c1   = ${x :: Base.Int %rTC19}
        :$ Base.Data -> Base.Thunk;
        

