-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern x
        :: Base.Int %rTC0
        :$ Base.Data;
        
foreign import extern fun
        :: forall %r0
        .  Base.Unit -(!e0 $c0)> Base.Int %r0
        :- !e0        = Base.!Read %rTC0
        ,  $c0        = x : Base.Int %rTC0
        ,  Num (Base.Int %rTC0)
        :$ Base.Data -> Base.Data;
        
foreign import extern fun2
        :: forall %r0
        .  Base.Unit -($c0)> Base.Unit -(!e0 $c1)> Base.Int %r0
        :- !e0        = Base.!Read %rTC0
        ,  $c0        = fun : Base.Int %rTC0
        ,  $c1        = x : Base.Int %rTC0
        ,  Num (Base.Int %rTC0)
        :$ Base.Data -> Base.Thunk;
        
foreign import extern main
        :: Base.Unit -(!e0 $c0)> Base.Unit
        :- !e0        = !{Base.!Read %rTC0; System.Console.!Console}
        ,  $c0        = fun2 : Base.Int %rTC0
        :$ Base.Data -> Base.Data;
        

