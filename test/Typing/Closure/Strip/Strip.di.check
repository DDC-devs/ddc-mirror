-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern x
        :: Base.Int %rTC0
        :$ Base.Data;
        
foreign import extern add1X'
        :: forall %r0
        .  Base.Unit -(!e0 $c0)> Base.Int %r0
        :- !e0        = !{Base.!Read %rTC0; System.Error.!Error}
        ,  $c0        = x : Base.Int %rTC0
        :$ Base.Thunk;
        
foreign import extern add1X
        :: forall %r0
        .  Base.Unit -(!e0 $c0)> Base.Int %r0
        :- !e0        = Base.!Read %rTC0
        ,  $c0        = x : Base.Int %rTC0
        :$ Base.Data -> Base.Data;
        
foreign import extern idF
        :: forall t0 t1 !e0 $c0
        .  (t0 -(!e0 $c0)> t1) -> t0 -(!e0 $c0)> t1
        :- !e0        :> System.Error.!Error
        :$ Base.Thunk -> Base.Thunk;
        

