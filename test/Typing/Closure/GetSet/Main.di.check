-- Imports

-- Pragmas

-- Infix

-- Data
data Box %r a
        = Box {
                x :: a ;
        };


-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern project_Box_x
        :: forall t0 %r0
        .  Box %r0 t0 -(!e0)> t0
        :- !e0        = Base.!Read %r0
        :$ Base.Data -> Base.Obj;
        
foreign import extern project_Box_ref_x
        :: forall t0 %r0
        .  Box %r0 t0 -(!e0)> Data.Ref.Ref %r0 t0
        :- !e0        = Base.!Read %r0
        :$ Base.Data -> Base.Data;
        
foreign import extern makeGetSet
        :: forall t0 %r0 %r1
        .  t0 -> Data.Tuple.Tuple2 %r1 (Base.Unit -(!e0 $c0)> t0) (t0 -(!e1 $c1)> Base.Unit)
        :- !e0        = Base.!Read %r0
        ,  !e1        = !{Base.!Read %r0; Base.!Write %r0}
        ,  $c0        = ${box : %r0; box : %r0 $> t0}
        ,  $c1        = ${box : %r0; box : %r0 $> t0}
        ,  Base.Mutable %r0
        :$ Base.Obj -> Base.Data;
        
foreign import extern main
        :: Base.Unit -(!e0)> Base.Unit
        :- !e0        = System.Console.!Console
        :$ Base.Data -> Base.Data;
        
project Main.Box %_ *_ where
{
        x        = project_Box_x;
        ref_x    = project_Box_ref_x;
}


