-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import extern makeGetGet
        :: forall t0 %r0 %r1
        .  t0 -> Data.Tuple.Tuple2 %r1 (Base.Unit -(!e0 $c0)> t0) (Base.Unit -(!e1 $c1)> t0)
        :- !e0        = Base.!Read %r0
        ,  !e1        = Base.!Read %r0
        ,  $c0        = box : Data.Maybe.Maybe %r0 t0
        ,  $c1        = box : Data.Maybe.Maybe %r0 t0
        :$ Base.Obj -> Base.Data;
        
foreign import extern checkGetGet
        :: forall %r0 %r1 %r2 %r3 %r4
        .  Base.Unit -> Data.Tuple.Tuple2 %r4 (Data.List.List %r3 (Data.String.String %r0)) (Data.List.List %r2 (Base.Int %r1))
        :$ Base.Data -> Base.Data;
        

