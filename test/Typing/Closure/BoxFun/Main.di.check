-- Imports

-- Pragmas

-- Infix

-- Data
data BoxFun2 %r1 !e0 $c0 !e1 $c1
        = BoxFun2 {
                Base.Unit -(!e0 $c0)> Base.Unit -(!e1 $c1)> Base.Int32 %r1;
        };


-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import x
        :: Base.Int32 %rTC1
        :- Base.Const %rTC1
        ,  Base.Direct %rTC1
        :$ Base.Data;
        
foreign import y
        :: Base.Int32 %rTC2
        :- Base.Const %rTC2
        ,  Base.Direct %rTC2
        :$ Base.Data;
        
foreign import box
        :: BoxFun2 %rTS7 !e0 $c0 !e1 $c1
        :- !e0        = !{Base.!Read %rTC1; System.Console.!Console}
        ,  !e1        = Base.!Read %rTC2
        ,  $c0        = ${x : %rTC1; y : %rTC2}
        ,  $c1        = y : %rTC2
        ,  Base.Const %rTS7
        ,  Base.Direct %rTS7
        ,  Base.Direct %rTC1
        ,  Base.Const %rTC1
        ,  Base.Direct %rTC2
        ,  Base.Const %rTC2
        :$ Base.Data;
        
foreign import runBoxFun2
        :: forall %r0 !e0 !e1 $c0 $c1
        .  BoxFun2 %r0 !e1 $c0 !e0 $c1 -(!e2)> Base.Int32 %r0
        :- !e2        = !{Base.!Read %r0; !e1; !e0}
        :$ Base.Data -> Base.Data;
        
foreign import fun
        :: forall %r0
        .  Base.Unit -(!e0 $c0)> Base.Unit -(!e1 $c1)> Base.Int32 %r0
        :- !e0        = !{Base.!Read %rTC1; System.Console.!Console}
        ,  !e1        = Base.!Read %rTC2
        ,  $c0        = ${x : %rTC1; y : %rTC2}
        ,  $c1        = y : %rTC2
        ,  Base.Const %rTC1
        ,  Base.Direct %rTC1
        ,  Base.Const %rTC2
        ,  Base.Direct %rTC2
        :$ Base.Data -> Base.Thunk;
        
foreign import runBox
        :: Base.Unit -(!e0 $c0)> Base.Int32 %rTS7
        :- !e0        = !{Base.!Read %rTS7; Base.!Read %rTC1; System.Console.!Console; Base.!Read %rTC2}
        ,  $c0        = ${box : %rTS7; box : %rTC1; box : %rTC2}
        ,  Base.Direct %rTS7
        ,  Base.Const %rTS7
        ,  Base.Const %rTC1
        ,  Base.Direct %rTC1
        ,  Base.Const %rTC2
        ,  Base.Direct %rTC2
        :$ Base.Data -> Base.Data;
        
foreign import main
        :: Base.Unit -(!e0 $c0)> Base.Unit
        :- !e0        = !{Base.!Read %rTS7; Base.!Read %rTC1; System.Console.!Console; Base.!Read %rTC2}
        ,  $c0        = ${runBox : %rTS7; runBox : %rTC1; runBox : %rTC2}
        ,  Base.Const %rTS7
        ,  Base.Direct %rTS7
        ,  Base.Direct %rTC1
        ,  Base.Const %rTC1
        ,  Base.Direct %rTC2
        ,  Base.Const %rTC2
        :$ Base.Data -> Base.Data;
        

