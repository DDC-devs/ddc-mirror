-- Imports

-- Pragmas

-- Infix

-- Data

-- Effects

-- Regions

-- Classes

-- Class dictionaries

-- Class instances

-- Foreign imports

-- Binds
foreign import fun1
        :: forall %r0 %r1 %r2 %r3
        .  Base.Int32 %r2 -> Base.Int32 %r3 -($c0)> Base.Int32 %r1 -(!e0 $c1)> Base.Int32 %r0
        :- !e0        = !{Base.!Read %r2; Base.!Read %r3; Base.!Read %r1}
        ,  $c0        = x : %r2
        ,  $c1        = ${x : %r2; y : %r3}
        :$ Base.Data -> Base.Data -> Base.Data -> Base.Data;
        
foreign import fun2
        :: forall %r0 %r1 %r2 %r3
        .  Base.Int32 %r0 -> Base.Int32 %r1 -($c0)> Base.Int32 %r2 -(!e0 $c1)> Base.Int32 %r3
        :- !e0        = !{Base.!Read %r0; Base.!Read %r1; Base.!Read %r2}
        ,  $c0        = x : %r0
        ,  $c1        = ${x : %r0; y : %r1}
        :$ Base.Data -> Base.Data -> Base.Data -> Base.Data;
        

