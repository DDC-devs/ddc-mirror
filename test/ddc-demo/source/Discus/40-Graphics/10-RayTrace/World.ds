
module World
export world_make
import Object; Light
where


data World
 =      [ objects:  List Object
        , lights:   List Light
        , ambient:  Vec3 ]


-- | Make the world.
world_make (time: Float): World
 = [ objects = world_objects time
   , lights  = world_lights  time
   , ambient = Vec3 0.3 0.3 0.3 ]


-- | Lights in the world.
world_lights (time: Float): List Light
 = Cons (Light  [ point = Vec3 300.0     (0.0 - 300.0)   (0.0 - 100.0)
                , color = Vec3 150000.0  150000.0        150000.0 ])
 $ Nil


-- | Objects in the world at the given time.
world_objects (time: Float): List Object
 = Cons (Checks [ point  = Vec3   0.0 100.0 0.0
                , normal = vec3_normalize (Vec3 0.0 (-1.0) (-0.2))
                , shine  = 0.2 ])

 $ Cons (Sphere [ center = Vec3  0.0   0.0   20.0
                , radius = 30.0
                , color  = Vec3  0.3   0.3    1.0
                , shine  = 0.4 ])

 $ Cons (Sphere [ center = Vec3 15.0  -20.0 -10.0
                , radius = 10.0
                , color  = Vec3  1.0   0.3    0.3
                , shine  = 0.4 ])

 $ Cons (Sphere [ center = Vec3 -15.0 -20.0 -10.0
                , radius = 10.0
                , color  = Vec3 1.0 0.3 0.3
                , shine  = 0.4 ])

 $ Cons (Sphere [ center = Vec3  15.0  20.0 -10.0
                , radius = 10.0
                , color  = Vec3 0.0 1.3 0.3
                , shine  = 0.4 ])

 $ Cons (Sphere [ center = Vec3 -15.0  20.0 -10.0
                , radius = 10.0
                , color  = Vec3 0.0 1.3 0.3
                , shine  = 0.4 ])

 $ Nil



