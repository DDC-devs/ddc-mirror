
module Main
import System.IO.Console
import Class.Show
import Data.Numeric.Nat
import Data.Function
import Data.CompactRegion
where


hitLimit {@r: Region} (cr: CR r) (acc: Nat): S (Write r + Console) Nat 
  = case (acc < 10) of
      True  ->  do 
                  val = storeCR cr acc
                  writel (show val)
                  hitLimit cr (acc + 1)
      False ->  acc
       

main ()
 = private r with { Alloc r; Read r; Write r } in
   do   
      cr = allocCR {@r} 1024
      acc = hitLimit cr 0
      deleteCR cr

