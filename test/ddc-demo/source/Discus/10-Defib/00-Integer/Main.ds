-- | Various functions on integers.
module Main
import Data.Numeric
import Data.Function
import Data.Text
import Class.Show
import System.IO.Console
where

main ()
 = do   writel $ "fac 15     = " % show (fac 15)
        writel $ "ack 3 4    = " % show (ack 3   4)
        writel $ "gcd 100 28 = " % show (gcd 100 28)
        writel $ "tak 12 8 4 = " % show (tak 24 16 8)


-- Factorial.
fac  (n: Nat): Nat
 = fac' 1 n

fac' (acc: Nat) (n: Nat): Nat
 | n == 0       = acc
 | n == 1       = acc
 | otherwise    = fac' (acc * n) (n - 1)


-- Ackermann's function.
ack (m: Nat) (n: Nat): Nat
 | m == 0       = n + 1
 | n == 0       = ack (m - 1) 1
 | otherwise    = ack (m - 1) (ack m (n - 1))


-- Greatest Common Divisor.
gcd (x y: Nat): Nat
 | x == 0       = y
 | y == 0       = x
 | x > y        = gcd y (rem x y)
 | otherwise    = gcd x (rem y x)


-- Tak
tak (x y z: Nat): Nat
 | not (y < x)  = z
 | otherwise
 = tak  (tak (x - 1) y z)
        (tak (y - 1) z x)
        (tak (z - 1) x y)
