
-- Check pattern match desugaring.
--

map2 f xx
 = case xx of {
 	[]	-> [];
	x : xs	-> f x : map2 f xs;
 };


addMe :: Tuple2 Int [Tuple2 Int Int] -> Tuple3 (Tuple2 Int Int) Int (Tuple2 Int Int) -> Int;
addMe (x, ((a, b) : z))	((c, d), e, (f, g)) 
 	= x + a + b + c + d + e + f + g;


sumTuples xx
 = match {
 	| []			<- xx	= 0;
	| ((x1, y1) : xs) 	<- xx	= x1 + y1 + sumTuples xs;
 };
	

listPairs xx
 = match { 
 	| a : b : xs	<- xx 	=  (a, b) : listPairs (b : xs);
				\= [];
 };

listPairTuples xx
 = match {
 	| (x1, x2) : (y1, y2) : xs	<- xx
	= (x1, y1) : (x2, y2) : listPairTuples ((x2, y2) : xs);	
	
	\= [];
 };
