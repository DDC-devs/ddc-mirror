
module Main
import Cell
import World
import Data.Array
import Data.List
import System.IO.Console
import System.Posix.Unistd
import System.Runtime
where



-------------------------------------------------------------------------------
main ()
 = private r with {Read r; Write r; Alloc r}
   in do   
        world   = newWorld [r] 30 30
        setCell world 10 14 CellAlive
        setCell world 11 14 CellAlive
        setCell world 12 14 CellAlive
        setCell world 13 14 CellAlive
        setCell world 14 14 CellAlive
        setCell world 14 15 CellAlive
        setCell world 16 14 CellAlive
        setCell world 16 15 CellAlive
        setCell world 16 16 CellAlive

        animate world 0 100

        ()


animate (world:     World r)
        (frame max: Nat)
        : S (Read r + Alloc r + Sleep + Console + Runtime) Unit
 | frame >= max
 = do   writel $ showWorld world

 | otherwise
 = do   
        writel  $ showWorld world
        world'  = stepWorld world
--        usleep 100000
        animate world' (frame + 1) max

