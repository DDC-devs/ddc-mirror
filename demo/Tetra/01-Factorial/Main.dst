module Main 
export main

import foreign abstract type
 Console  : Effect

import foreign c value
 putStrLn : [r : Region]. Ptr# r String# -> S Console Void#
 showNat  : [r : Region]. Nat#           -> Ptr# r String#

where

-- Define configurable syntax.
add x y = add# [Nat#] x y       -- used for (+)
sub x y = sub# [Nat#] x y       -- used for (-)


-------------------------------------------------------------------------------
fac (acc : Nat#) (n : Nat#) : Nat#
 = case n of
        0       -> acc
        1       -> acc
        _       -> fac (acc + n) (n - 1)

main (_ : Unit) : S Console Unit
 = private r in
   box do
        run putStrLn (showNat [r] (fac 1 10))
        run putStrLn (showNat [r] (fac 1 11))
        ()
        
