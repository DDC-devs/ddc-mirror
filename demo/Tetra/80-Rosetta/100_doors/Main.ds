-- 100 doors
-- http://rosettacode.org/wiki/100_doors
-- 
-- Problem:
--  You have 100 doors in a row that are all initially closed. You make 100
--  passes by the doors. The first time through, you visit every door and toggle
--  the door (if the door is closed, you open it; if it is open, you close it).
--  The second time you only visit every 2nd door (door #2, #4, #6, ...). The
--  third time, every 3rd door (door #3, #6, #9, ...), etc, until you only visit
--  the 100th door.
--
-- Question:
--  What state are the doors in after the last pass? Which are open, which
--  are closed?
--
module Main 
import Data.List
import Data.Text
import Data.Function
import Data.Numeric.Bool
import System.IO.Console

where

data Door where
        Open    : Door
        Closed  : Door


showDoor   Open   = "Open"
showDoor   Closed = "Closed"

toggleDoor Open   = Closed
toggleDoor Closed = Open


toggleEvery (n: Nat) (k: Nat): List Door -> List Door
 = zipWith toggleIx (enumFromTo 1 n)
 where
        toggleIx (i: Nat) (d: Door): Door
         | rem i k == 0 = toggleDoor d
         | otherwise    = d


runToggle (n: Nat): List Door
 = foldr (toggleEvery n) (replicate n Closed) (enumFromTo 1 n)


main ()
 = do   zipWithS 
                (λn: Nat. λd: Door. 
                        case d of
                         Open   -> writel (showNat n %% showDoor d)
                         _      -> ())
                (enumFromTo 1 100)
                (runToggle 100)
        ()
