-- | Various functions on integers.
module Main 
import Data.Numeric.Nat
import Data.Numeric.Bool
import System.IO.Console
where


main (_ : Unit) : S Console Unit
 = box do
        run putStrLn (showNat (fac 10))
        run putStrLn (showNat (ack 3   2))
        run putStrLn (showNat (gcd 100 28))


-- Factorial.
fac  (n : Nat) : Nat
 = fac' 1 n

fac' (acc : Nat) (n : Nat) : Nat
 = match 
        | n == 0        = acc
        | n == 1        = acc
        | otherwise     = fac' (acc * n) (n - 1)


-- Ackermann's function.
ack (m : Nat) (n : Nat) : Nat 
 = match
        | m == 0       = n + 1
        | n == 0       = ack (m - 1) 1
        | otherwise    = ack (m - 1) (ack m (n - 1))


-- Greatest Common Divisor.
gcd (x y : Nat) : Nat 
 = match
        | x == 0       = y
        | y == 0       = x
        | x > y        = gcd y (rem x y)
        | otherwise    = gcd x (rem y x)


