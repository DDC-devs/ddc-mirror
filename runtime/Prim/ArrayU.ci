
#ifndef _Trauma_Prim_ArrayU
#define _Trauma_Prim_ArrayU

#include "../Profile.h"
#include "../Force.h"
#include "../Alloc.h"
#include "../Macro.h"
#include "../Object.h"
#include "../State.h"

struct ArrayU_Int_Payload {
	UInt	elemCount;
	Int32	elem[];
};

#define _arrayPeek(type,a,ix)	(primArray##type##_peek (a, ix))
#define _arrayPoke(type,a,ix,x)	(primArray##type##_poke (a, ix, x))

static inline Int32 primArrayInt32_peek 
	(Obj* array_, Int32 ix)
{
	DataR*	array	= (DataR*)array_;

	struct ArrayU_Int_Payload* payload
		= (struct ArrayU_Int_Payload*)array ->payload;
	
	return payload ->elem [ix]; 
}


static inline Obj* primArrayInt32_poke 
	(Obj* array_, Int32 ix, Int32 x)
{
	DataR*	array	= (DataR*)array_;

	struct ArrayU_Int_Payload* payload
		= (struct ArrayU_Int_Payload*)array ->payload;
	
	payload ->elem [ix] = x; 
	
	return _primUnit;
}


#endif
