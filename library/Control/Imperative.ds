
import
{	Base;
	Data.Bool;
}


import extern
{
	primControl_while 
		:: forall a %r1 !e1 !e2
		.  (() -(!e1)> Bool %r1) -> (() -(!e2)> a) -(!e3)> ()
		:- !e3 	= !{ !Read %r1; !e1; !e2 }
		:$ Obj -> Obj -> Obj;

	primControl_break
		:: forall a
		. () -> a
		:$ Obj -> Obj;


	primControl_when
		:: forall a %r1 !e1 !e2 
		.  (() -(!e1)> Bool %r1) -> (() -(!e2)> a) -(!e3)> ()
		:- !e3 	= !{ !Read %r1; !e1; !e2 }
		:$ Obj -> Obj -> Obj;

	primControl_unless
		:: forall a %r1 !e1 !e2
		.  (() -(!e1)> Bool %r1) -> (() -(!e2)> a) -(!e3)> ()
		:- !e3 	= !{ !Read %r1; !e1; !e2 }
		:$ Obj -> Obj -> Obj;

}


loop f
 = do {	f ();
	loop f;
 };



