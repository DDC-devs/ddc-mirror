
import Base;

infixl 8 *, / ;
infixl 7 +, - ;

class Num a where 
{
	(+)	:: forall b c !e1 $c1
		.  a -> b -(!e1 $c1)> c
		:- !e1 = !{ !ReadT a; !ReadT b }
		,  $c1 = ${ x :: a }
		,  Shape3 a b c;

	(-)	:: forall b c !e1 $c1
		.  a -> b -(!e1 $c1)> c
		:- !e1 = !{ !ReadT a; !ReadT b }
		,  $c1 = ${ x :: a }
		,  Shape3 a b c;

	(*)	:: forall b c !e1 $c1
		.  a -> b -(!e1 $c1)> c
		:- !e1 = !{ !ReadT a; !ReadT b }
		,  $c1 = ${ x :: a }
		,  Shape3 a b c;

	(/)	:: forall b c !e1 $c1
		.  a -> b -(!e1 $c1)> c
		:- !e1 = !{ !ReadT a; !ReadT b }
		,  $c1 = ${ x :: a }
		,  Shape3 a b c;

	mod	:: forall b c !e1 $c1
		.  a -> b -(!e1 $c1)> c
		:- !e1 = !{ !ReadT a; !ReadT b }
		,  $c1 = ${ x :: a }
		,  Shape3 a b c;

}
