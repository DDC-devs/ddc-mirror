{-# OPTIONS -no-implicit-prelude #-}

-- Primitive functions for unboxed Word64 operations.
--	There are no actual C functions associated with these.
--	We define them so the type inferencer has a schemes for them.
--
module	Data.Numeric.Word64U

import	Class.Eq
	Class.Ord
	Class.Num
	Class.Integral
	

-- Arithmetic -----------------------------------------------------------------
foreign import "primWord64U_neg"
 primWord64U_neg :: Word64# -> Word64#

foreign import "primWord64U_add"
 primWord64U_add :: Word64# -> Word64# -> Word64#

foreign import "primWord64U_sub"
 primWord64U_sub :: Word64# -> Word64# -> Word64#

foreign import "primWord64U_mul"
 primWord64U_mul :: Word64# -> Word64# -> Word64#

foreign import "primWord64U_div"
 primWord64U_div :: Word64# -> Word64# -> Word64#

foreign import "primWord64U_mod"
 primWord64U_mod :: Word64# -> Word64# -> Word64#


-- Comparisons ----------------------------------------------------------------
foreign import "primWord64U_eq"	
 primWord64U_eq	:: Word64# -> Word64# -> Bool#

foreign import "primWord64U_neq"	
 primWord64U_neq :: Word64# -> Word64# -> Bool#

foreign import "primWord64U_gt"	
 primWord64U_gt	:: Word64# -> Word64# -> Bool#

foreign import "primWord64U_ge"	
 primWord64U_ge	:: Word64# -> Word64# -> Bool#

foreign import "primWord64U_lt"	
 primWord64U_lt	:: Word64# -> Word64# -> Bool#

foreign import "primWord64U_le"	
 primWord64U_le	:: Word64# -> Word64# -> Bool#


-- Instances ------------------------------------------------------------------
instance Eq Word64# where
	(==)  x y	= boxBool (primWord64U_eq x y) 
	(/=)  x y	= boxBool (primWord64U_neq x y)


instance Ord Word64# where
	(>)   x y	= boxBool (primWord64U_gt x y)
	(<)   x y	= boxBool (primWord64U_lt x y)
	(>=)  x y	= boxBool (primWord64U_ge x y)
	(<=)  x y	= boxBool (primWord64U_le x y)

	compare x y
	 | x == y	=  EQ
	 | x <  y	=  LT
			\= GT


instance Num Word64# where 
 	(+) 		= primWord64U_add
	(-) 		= primWord64U_sub
	(*) 		= primWord64U_mul
	negate		= primWord64U_neg


instance Integral Word64# where
	div 		= primWord64U_div
	mod		= primWord64U_mod
