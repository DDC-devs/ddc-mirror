{-# OPTIONS -no-implicit-prelude #-}

module	Data.Numeric.Float32U

import	Class.Eq
	Class.Num
	Class.Ord
	Class.Fractional


-- Arithmetic -----------------------------------------------------------------
foreign import "primFloat32U_neg"
 primFloat32U_neg	:: Float32# -> Float32#

foreign import "primFloat32U_add"
 primFloat32U_add	:: Float32# -> Float32# -> Float32#

foreign import "primFloat32U_sub"
 primFloat32U_sub	:: Float32# -> Float32# -> Float32#

foreign import "primFloat32U_mul"
 primFloat32U_mul	:: Float32# -> Float32# -> Float32#

foreign import "primFloat32U_div"
 primFloat32U_div	:: Float32# -> Float32# -> Float32#


-- Comparisons ----------------------------------------------------------------
foreign import "primFloat32U_eq"
 primFloat32U_eq	:: Float32# -> Float32# -> Bool#

foreign import "primFloat32U_neq"
 primFloat32U_neq	:: Float32# -> Float32# -> Bool#

foreign import "primFloat32U_gt"
 primFloat32U_gt	:: Float32# -> Float32# -> Bool#

foreign import "primFloat32U_ge"
 primFloat32U_ge	:: Float32# -> Float32# -> Bool#

foreign import "primFloat32U_lt"
 primFloat32U_lt	:: Float32# -> Float32# -> Bool#

foreign import "primFloat32U_le"
 primFloat32U_le	:: Float32# -> Float32# -> Bool#


-- Trig -----------------------------------------------------------------------
foreign import "sinf"
 primFloat32U_sin	:: Float32# -> Float32#

foreign import "asinf"
 primFloat32U_asin	:: Float32# -> Float32#

foreign import "cosf"
 primFloat32U_cos	:: Float32# -> Float32#
 
foreign import "acosf"
 primFloat32U_acos	:: Float32# -> Float32#

foreign import "tanf"
 primFloat32U_tan	:: Float32# -> Float32#
 
foreign import "atanf"
 primFloat32U_atan	:: Float32# -> Float32#


-- Utils ----------------------------------------------------------------------
foreign import "truncf"
 primFloat32U_ftrunc	:: Float32# -> Float32#

foreign import "roundf"
 primFloat32U_fround	:: Float32# -> Float32#

foreign import "floorf"
 primFloat32U_ffloor	:: Float32# -> Float32#

foreign import "fmodf"
 primFloat32U_fmod	:: Float32# -> Float32# -> Float32#

foreign import "powf"
 primFloat32U_fpow	:: Float32# -> Float32# -> Float32#

foreign import "sqrtf"
 primFloat32U_sqrt	:: Float32# -> Float32#

foreign import "fabsf"
 primFloat32U_abs  	:: Float32# -> Float32#

foreign import "logf"
 primFloat32U_log	:: Float32# -> Float32#




-- Instances ------------------------------------------------------------------
instance Eq Float32# where
	(==) x y	= boxBool (primFloat32U_eq  x y)
	(/=) x y	= boxBool (primFloat32U_neq x y)


instance Ord Float32# where
	(>)		= primFloat32U_gt
	(<)		= primFloat32U_lt
	(>=)		= primFloat32U_ge
	(<=)		= primFloat32U_le


instance Num Float32# where 
 	(+) 		= primFloat32U_add
	(-) 		= primFloat32U_sub
	(*) 		= primFloat32U_mul
	negate		= primFloat32U_neg


instance Fractional Float32# where
	(/) 		= primFloat32U_div

