
import	Base
import	Data.String
import	Data.Int
import 	Data.Int32U
import	Data.Float
import	Data.Char

pragma cc_includes [ "unistd.h" ]

-- an effect on stdin/stderr/stdout
effect !Console	:: !

-- | Print a single string chunk
foreign import "primPrintString"
	primPrintStringChunk
		:: forall %r1
		.  String %r1 -(!e1)> Unit
		:- !e1	= !{ !Console; !Read %r1 }
		:$ Obj -> Obj

foreign import "primStringChar"
	stringOfChar
		:: forall %r1 %r2
		.  Char %r1 -(!e1)> String %r2
		:- !e1	= !{ !Read %r1 }
		:$ Obj -> Obj

foreign import "primStringInt"
	stringOfInt
		:: forall %r1 %r2
		.  Int %r1 -(!e1)> String %r2
		:- !e1	= !{ !Read %r1 }
		:$ Obj -> Obj

foreign import "primStringFloat32"
	stringOfFloat32	
		:: forall %r1 %r2
		.  Float %r1 -(!e1)> String %r2
		:- !e1 = !{ !Read %r1 }
		:$ Obj -> Obj


foreign import "usleep"
	usleep	:: forall %r1
	 	.  Int32# -(!e1)> ()
		:- !e1 = !{ !Console }
		:$ Int32# -> Obj

