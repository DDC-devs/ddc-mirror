
import System.File

pragma cc_includes
	[ "sys/types.h", "sys/socket.h" ]

effect !Network :: !

foreign import "(void *)"
 unsafe_castToVoidPtr
 	:: a -> Ptr# Void#


foreign import "malloc"
 malloc :: Int32#  {read}	-- size
 	-> Ptr# Void#		-- buffer


foreign import "primConnect"
 connect 
 	:: String# {read}
 	-> Int32#  {read}
	-(!Network)> Int32#

foreign import "send"
 send	:: Int32# {read}	-- handle
 	-> Ptr# Void# {write}	-- buffer
	-> Int32# 		-- length
	-> Int32#		-- flags
	-(!Network)> Int32#	-- count of chars send, or -1 on error	


foreign import "recv"
 recv	:: Int32#  {read}	-- socket
 	-> Ptr# Void# {write}	-- buffer
	-> Int32#  {read}	-- length of buff, max length of message
	-> Int32#  {read}	-- flags
	-(!Network)> Int32#	-- size of message read

