
-- Hooks that allow the runtime system to call back onto user space code.
--   Used to register exception handlers.
module Runtime.Hook

export foreign c value
 ddcHookSetExceptionFile        : [r1: Region]. Ptr# r1 Obj -> Void#
 ddcHookSetExceptionNetwork     : [r1: Region]. Ptr# r1 Obj -> Void#

 ddcHookCallExceptionFile       : [r1: Region]. Ptr# r1 Obj -> Ptr# r1 Obj -> Ptr# r1 Obj
 ddcHookCallExceptionNetwork    : [r1: Region]. Ptr# r1 Obj -> Ptr# r1 Obj -> Ptr# r1 Obj

import foreign c value
 ddcPrimStderrPutString : TextLit# -> Void#

 ddcRunThunk    :  [r1: Region]. Ptr# r1 Obj -> Ptr# r1 Obj

 ddcApply2      :  [r1: Region]
                .  Ptr# r1 Obj -> Ptr# r1 Obj -> Ptr# r1 Obj -> Ptr# r1 Obj

with letrec


-- Set ------------
ddcHookSetExceptionFile [r1: Region] (thunk: Ptr# r1 Obj): Void#
 =      write# (global# [Ptr# r1 Obj] "ddcRuntimeHookExceptionFile"#)    0# thunk

ddcHookSetExceptionNetwork [r1: Region] (thunk: Ptr# r1 Obj): Void#
 =      write# (global# [Ptr# r1 Obj] "ddcRuntimeHookExceptionNetwork"#) 0# thunk


-- Call ------------
ddcHookCallExceptionFile    [r1: Region] (pErrno pTextBuf: Ptr# r1 Obj): Ptr# r1 Obj
 = do
        addr    = read# (global# [Ptr# r1 Obj] "ddcRuntimeHookExceptionFile"#) 0#
        case neq# addr (promote# 0#) of
         True#
          -> do ptr     = makePtr# [r1] addr
                ddcRunThunk (ddcApply2 ptr pErrno pTextBuf)

         False#
          -> do ddcPrimStderrPutString "*** Runtime Error: file exception hook not set\n"#
                fail#

ddcHookCallExceptionNetwork [r1: Region] (pErrno pTextBuf: Ptr# r1 Obj): Ptr# r1 Obj
 = do
        addr    = read# (global# [Ptr# r1 Obj] "ddcRuntimeHookExceptionNetwork"#) 0#
        case neq# addr (promote# 0#) of
         True#
          -> do ptr     = makePtr# [r1] addr
                ddcRunThunk (ddcApply2 ptr pErrno pTextBuf)

         False#
          -> do ddcPrimStderrPutString "*** Runtime Error: network exception hook not set\n"#
                fail#
