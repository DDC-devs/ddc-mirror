
-- | References to boxed values.
module Runtime.Prim.Ref

export foreign c value
 ddcPrimRefAlloc  : [r1 r2 : Region]. Ptr# r1 Obj -> Ptr# r2 Obj
 ddcPrimRefRead   : [r1 r2 : Region]. Ptr# r1 Obj -> Ptr# r2 Obj
 ddcPrimRefWrite  : [r1 r2 : Region]. Ptr# r1 Obj -> Ptr# r2 Obj -> Void#

import foreign c value
 ddcBoxedAlloc    : [r1    : Region]. Tag# -> Nat# -> Nat# -> Ptr# r1 Obj
 ddcBoxedGetField : [r1 r2 : Region]. Ptr# r1 Obj  -> Nat# -> Ptr# r2 Obj
 ddcBoxedSetField : [r1 r2 : Region]. Ptr# r1 Obj  -> Nat# -> Ptr# r2 Obj -> Void#

with letrec


-- | Allocate a new reference to some boxed value.
ddcPrimRefAlloc [r1 r2: Region] (pVal: Ptr# r1 Obj): Ptr# r2 Obj
 = do   sVal    = allocSlot# [r1]

        poke# sVal pVal
        ref     = ddcBoxedAlloc [r2] (truncate# 0#) (truncate# 1#) 1#
        pVal'   = peek# sVal

        ddcBoxedSetField ref 0# pVal'
        ref


-- | Read the value from a reference.
ddcPrimRefRead  [r1 r2: Region] (ref: Ptr# r1 Obj): Ptr# r2 Obj
 =      ddcBoxedGetField ref 0#


-- | Write a value into reference.
ddcPrimRefWrite [r1 r2: Region] (ref: Ptr# r1 Obj) (val: Ptr# r2 Obj): Void#
 =      ddcBoxedSetField ref 0# val

