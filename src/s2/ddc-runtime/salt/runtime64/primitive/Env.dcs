
-- | Get command line arguments.
--
--   The executables produced by DDC accept both user-level and runtime
--   system arguments. We separate the user and runtime argument list
--   with the special +RTS flag, eg:
--
--   exe USER_ARG0 USER_ARG1 ... +RTS RUNTIME_ARG0 RUNTIME_ARG1 ...
--
module Runtime.Prim.Env

export foreign c value
 ddcPrimEnvGetArgCount          : Unit -> Nat#
 ddcPrimEnvGetArgVal            : Nat# -> TextLit#

 ddcPrimEnvGetUserArgCount      : Unit -> Nat#
 ddcPrimEnvGetUserArgVal        : Nat# -> TextLit#

 ddcPrimEnvGetRuntimeArgCount   : Unit -> Nat#
 ddcPrimEnvGetRuntimeArgVal     : Nat# -> TextLit#

import foreign c value
 strcmp                         : TextLit# -> TextLit# -> Nat#

with letrec


-------------------------------------------------------------------------------
-- | Get the count of available command-line arguments.
ddcPrimEnvGetArgCount (_: Unit): Nat#
 = do   sub# (read# (global# [Nat#] "ddcGlobalEnvArgCount"#) 0#) 1#


-- | Get a numbered command-line argument.
ddcPrimEnvGetArgVal (i: Nat#): TextLit#
 = do   addr     = read# (global# [Addr#] "ddcGlobalEnvArgVal"#) 0#
        read# addr (shl# (add# i 1#) (size2# [Addr#]))


-------------------------------------------------------------------------------
-- | Get the count of available user arguments.
ddcPrimEnvGetUserArgCount (_: Unit): Nat#
 = ddcPrimEnvGetUserArgCountLoop (ddcPrimEnvGetArgCount ()) 0#

ddcPrimEnvGetUserArgCountLoop (argc: Nat#) (ix: Nat#): Nat#
 = case ge# ix argc of
    True#  -> ix
    False# ->
        case strcmp "+RTS"# (ddcPrimEnvGetArgVal ix) of
         0#     -> ix
         _      -> ddcPrimEnvGetUserArgCountLoop argc (add# ix 1#)


-- | Get the value of a user argument,
--   or "undefined" if it's out of range.
ddcPrimEnvGetUserArgVal (ix: Nat#): TextLit#
 = case ge# ix (ddcPrimEnvGetArgCount ()) of
        True#   -> "undefined"#
        _       -> ddcPrimEnvGetUserArgValLoop ix 0#

ddcPrimEnvGetUserArgValLoop (n: Nat#) (ix: Nat#)
 = do   arg = ddcPrimEnvGetArgVal ix
        case strcmp "+RTS"# (ddcPrimEnvGetArgVal ix) of
         0# -> "undefined"#
         _  -> case eq# n ix of
                True#   -> ddcPrimEnvGetArgVal ix
                False#  -> ddcPrimEnvGetUserArgValLoop n (add# ix 1#)


-------------------------------------------------------------------------------
-- | Get the count of available runtime system arguments.
ddcPrimEnvGetRuntimeArgCount (_: Unit): Nat#
 = ddcPrimEnvGetRuntimeArgCountLoop
        (ddcPrimEnvGetArgCount ())
        (ddcPrimEnvGetUserArgCount ())
        0#

ddcPrimEnvGetRuntimeArgCountLoop (argc: Nat#) (ix: Nat#) (count: Nat#): Nat#
 = case ge# ix argc of
    True#  -> count
    False# ->
     case strcmp "+RTS"# (ddcPrimEnvGetArgVal ix) of
      0# -> ddcPrimEnvGetRuntimeArgCountLoop argc (add# ix 1#) count
      _  -> ddcPrimEnvGetRuntimeArgCountLoop argc (add# ix 1#) (add# count 1#)


-- | Get the value of a runtime system argument,
--   or "undefined" if it's out of range.
ddcPrimEnvGetRuntimeArgVal (ix: Nat#): TextLit#
 = ddcPrimEnvGetArgVal (add# (add# (ddcPrimEnvGetUserArgCount ()) ix) 1#)

