
-- | Definition of the Shimmer Abstract Syntax Tree (AST) types.
module SMR.Core.Exp.Base
import Data.Text
import Data.List
where


-- | Top-level declarations.
data Decl (s p: Data) where
        DTerm   : Name -> Exp s p -> Decl s p


-- | Expressions.
data Exp (s p: Data)
        -- Return multiple values.
        = XRet (List (Exp s p))

        -- Reference to an external thing.
        | XRef (ExpRef s p)

        -- Variable with a binding depth.
        | XVar Name Nat

        -- Application of a functional expression to an argument.
        | XApp (Exp s p) (Exp s p)

        -- Abstraction with a list of parameter names and body expression.
        | XAbs (List Param) (Exp s p)

        -- Substitution train applied to an expression.
        -- The train car at the head of the list is applied first.
        | XSub (List (Car s p)) (Exp s p)

        -- Keyed expressions.
        | XKey Key (Exp s p)


-- | Function parameter.
data Param
        -- | Bind a value (call by value).
        = PParam Name Form


-- | Form of argument required in application.
data Form
        -- | Value (call by value)
        = FVal

        -- | Expression (call by name)
        | FExp


-- | Expression keys (super primitives).
data Key
        -- | A tag expression is never evaluated.
        = KTag

        -- | Delay evaluation of an expression when used as the argument
        --   of a call-by-value function application.
        | KBox

        -- | Run a boxed expression.
        | KRun

        -- | Sequence evaluation.
        | KSeq


-- | A car on the substitution train.
data Car (s p: Data)
        = CSim (Snv s p)
        | CRec (Snv s p)
        | CUps Ups


-- | Explicit simultaneous substitution,
--   which maps name and binding depth to an expression.
data Snv (s p: Data)
        = SSnv (List ((Name, Nat), Exp s p))


-- | Lifting indicator,
--   which maps name and binding depth to number of levels to lift.
data Ups
        -- In the list the first element has priority.
        = UUps (List UpsBump)

type UpsBump
        = ((Name, Nat), Nat)


-- | Reference to some external thing,
--   where the reference is not the usual notion of variable binding.
data ExpRef (s p: Data)
        -- Uninterpreted symbol.
        = RSym s

        -- Primitive value.
        | RPrm p

        -- Macro name.
        | RMac Name

        -- Set name.
        | RSet Name


-- | Generic names for things.
type Name = Text

