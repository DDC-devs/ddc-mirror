
module Class.Pretty
export {ppr; pretty_Unit; pretty_Text; pretty_Tuple }
import Data.Text
where


-- | Pretty printer dictionary.
data Pretty (a: Data) where
        Pretty : (a -> Text) -> Pretty a


-- | Pretty print a thing as a text string.
ppr {(Pretty ppr'): Pretty a} (x: a): Text
 = ppr' x


-- | Pretty printer for Unit values.
pretty_Unit: Pretty Unit
 = Pretty $ \xx -> "()"


-- | Pretty printer for Text values.
--   ISSUE #381: Escape non-printable characters in base Show library.
pretty_Text: Pretty Text
 = Pretty $ λxx -> textOfChar '"' % xx % textOfChar '"'


-- | Pretty printer for tuples.
pretty_Tuple {Pretty a} {Pretty b}: Pretty (a, b)
 = Pretty $ λ(x, y) -> "(" % ppr x % "," % ppr y % ")"
