
module System.Env
export { env_getExeName; env_getArgs }
import Data.Text
import Data.Map.Fun

-- | Effect of accessing the environment.
import foreign abstract type
 Env : Effect


-- Primitive functions that access the environment.
import foreign c value
 -- ISSUE #405: Segfault when importing foreign function with suspension type.
 -- Importing this returning (S Env Nat) segfaults.
 -- We should attach the effects at this point.
 ddcEnvGetArgC : Nat# -> Nat#

 ddcEnvGetArgV : Nat# -> TextLit#

-- | Runtime operators for working with unboxed text literals.
import foreign c value

        -- | Make a text literal.
        --   The TextLit# type is a pointer to literal UTF-8 data in
        --   static memory, which we pack into a boxed object.
        ddcPrimMakeTextLit     : TextLit# -> TextLit

where


-- | Get the name of the current executable.
env_getExeName: S Env Text
 = box weakeff Env in
   TextLit (ddcPrimMakeTextLit (ddcEnvGetArgV 0))


-- | Get a map of command-line arguments.
env_getArgs:    S Env (Map Fun Nat Text)
 = box weakeff Env in
   do
        argc    = ddcEnvGetArgC 0

        mapFun_fromIndexed
                (argc - 1)
                (\ix -> TextLit (ddcPrimMakeTextLit (ddcEnvGetArgV (ix + 1))))

