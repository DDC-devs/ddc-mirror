
-- | Showing various data types as text.
module Data.Text.Show
export
{       showBool;
        showTextRaw;
}
import Data.Tuple
import Data.Text.Base
import Data.Text.Char
import Data.Text.Operator
import Data.Text.Numeric
import Data.Text.Escape
where


-------------------------------------------------------------------------------
-- | Convert a Bool to a String.
showBool (x : Bool): Text
 = if x then "True"
        else "False"


-------------------------------------------------------------------------------
-- | Show the raw structure of a text object.
showTextRaw (tx: Text): Text
 = case tx of
        TextLit lit
         -> parens $ "TextLit" %% "\"" % escapeTextDisciple tx % "\""

        TextVec vec
         -> parens $ "TextVec" %% "\"" % escapeTextDisciple tx % "\""

        TextApp t1 t2
         -> parens $ "TextApp" %% showTextRaw t1 %% showTextRaw t2

