
module  Data.Tuple
export  {fst; snd}
where


data Tup1 (a: Data)
        = T1 a

data Tup2 (a b: Data)
        = T2 a b

data Tup3 (a b c: Data)
        = T3 a b c

data Tup4 (a b c d: Data)
        = T4 a b c d

data Tup5 (a b c d e: Data)
        = T5 a b c d e

data Tup6 (a b c d e f: Data)
        = T6 a b c d e f

data Tup7 (a b c d e f g: Data)
        = T7 a b c d e f g

data Tup8 (a b c d e f g h: Data)
        = T8 a b c d e f g h

data Tup9 (a b c d e f g h i: Data)
        = T9 a b c d e f g h i

data Tup10 (a b c d e f g h i j: Data)
        = T10 a b c d e f g h i j

data Tup11 (a b c d e f g h i j k: Data)
        = T11 a b c d e f g h i j k

data Tup12 (a b c d e f g h i j k l: Data)
        = T12 a b c d e f g h i j k l

fst (t: Tup2 a b): a
 = case t of
        T2 x y  -> x

snd (t: Tup2 a b): b
 = case t of
        T2 x y  -> y

