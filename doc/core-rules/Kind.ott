% Disciple Core Kinds.
% 

grammar

%% Sort expressions.
S :: 'S_' ::=
  | @@                  ::      :: Prop         % The sort of witness kinds.
  | **                  ::      :: Comp         % The sort of computation kinds.


%% Kind expressions.
K :: 'K_' ::=
  | *                   ::      :: Val          % The kind of value types.
  | %                   ::      :: Rgn          % The kind of region types.
  | !                   ::      :: Eff          % The kind of effect types.
  | $                   ::      :: Clo          % The kind of closure types.
  | @                   ::      :: Wit          % The kind of witnesses.
  | K1 ~> K2            ::      :: Fun          % The function kind.

  | ( K )               ::      :: Paren        % Allow kinds to be wrapped in parens.


defns
JSort   :: ''   ::=

  defn
  K :s S                ::      :: Sort         :: '' by  

        ---------               :: SoVal
         * :s **

%       ---------               :: SoRgn
%        % :s **
% TODO: how do we escape this?

        ---------               :: SoEff
         ! :s **

        ---------               :: SoClo
         $ :s **

        ---------               :: SoWit
         @ :s @@

             K2 :s S1
        -----------------       :: SoFun
         K1 ~> K2 :s S1
